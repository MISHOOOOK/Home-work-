// Робота з типами данних 


'number' + 3 + 3
/**
Результат: "number33"
Коментарі: Рядок "number" з'єднується з числами 3 та 3.

*/
null + 3
/**
Результат: 3
Коментарі: null автоматично перетворюється у число під час математичних операцій, отже, null + 3 рівне 3.

*/
5 && "qwerty"
/**
Результат: "qwerty"
Коментарі: Оператор && повертає останнє значення, яке було оцінено. Тут 5 - істина, тому результатом є "qwerty".
*/

+'40' + +'2' + "hillel"
/**
Результат: 42hillel
Коментарі: Унарний оператор + конвертує рядки у числа, а потім вони додаються. Потім додається рядок "hillel".*/

'10' - 5 === 6
/**
Результат: false
Коментарі: Рядок '10' конвертується у число, і вираз стає 5 - 5 === 6, що є неправдою.*/

true + false
/**
Результат: 1
Коментарі: Булеві значення перетворюються у числа під час математичних операцій, де true рівне 1, а false рівне 0.*/

'4px' - 3
/**
Результат: NaN (Not a Number)
Коментарі: Оператор - спробує конвертувати рядок '4px' у число, але це неможливо, тому результат - NaN.*/

'4' - 3
/**
Результат: 1
Коментарі: Рядок '4' конвертується у число, і операція відбувається як 4 - 3.*/

'6' + 3 ** 0
/**
Результат: '61'
Коментарі: Згідно математичного порядку операцій, 3 ** 0 обчислюється перед додаванням.*/

12 / '6'
/**
Результат: 2
Коментарі: Рядок '6' конвертується у число, і вираз стає 12 / 6.*/

'10' + (5 === 6)
/**
Результат: '10false'
Коментарі: Вираз (5 === 6) оцінюється як false, і його додають до рядка '10'.*/

null == ''
/**
Результат: false
Коментарі: Порівняння рівності (==) перетворює null у undefined, а порожній рядок залишається рядком.*/

3 ** (9 / 3)
/**
Результат: 27
Коментарі: Спочатку обчислюється вираз у дужках, а потім підноситься до ступеня.*/

!!'false' == !!'true'
/**
Результат: true
Коментарі: Подвійне заперечення !! перетворює рядки у булеві значення.*/

0 || '0' && 1
/**
Результат: '0'
Коментарі: Оператор || повертає перше істинне значення або останнє значення, якщо немає істинних.*/

(+null == false) < 1
/**
Результат: true
Коментарі: +null конвертує null у 0, та порівнюється з false (яке також рівне 0).*/

false && true || true
/**
Результат: true
Коментарі: Логічний оператор && повертає перше значення, яке є false, інакше - останнє значення.*/

false && (false || true)
/**
Результат: false
Коментарі: Оператор && повертає перше значення false, не обчислюючи вираз у дужках.*/

(+null == false) < 1 ** 5
/**
Результат: true
Коментарі: Вираз у правій частині порівнюється з 1, а результат порівняння у лівій - з true*/
